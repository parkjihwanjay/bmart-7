scalar Date

type User {
  id: Int!
  userId: String!
  email: String
  phone: String
  address: String
  createdAt: Date!
  favorites: [Favorite!]
}

type Favorite {
  id: Int!
  user: User!
  product: Product!
}

input UserSearchInput {
  id: Int
  userId: String
  email: String
  phone: String
  address: String
}

type Query {
  getUserById(id: Int!): User
  getUsers(input: UserSearchInput): [User!]!
  getUserFavorites(id: Int!): [Favorite!]
}

input UserInput {
  id: Int!
  userId: String!
  email: String
  phone: String
  address: String
}

input FavoriteInput {
  userId: Int!
  productId: Int!
}

type Mutation {
  insertUser(input: UserInput!): User
  insertFavorite(input: FavoriteInput): Favorite
  deleteFavorite(id: Int!): Favorite
}
