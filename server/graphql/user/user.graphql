scalar Date

type User {
  id: Int!
  userId: String!
  email: String
  phone: String
  address: String
  createdAt: Date!
}

input UserFindInput {
  id: Int!
}

input UserSearchInput {
  id: Int
  userId: String
  email: String
  phone: String
  address: String
}

type Query {
  getOneUser(input: UserFindInput!): User
  getUsers(input: UserSearchInput): [User]!
}

input UserInput {
  id: Int!
  userId: String!
  email: String
  phone: String
  address: String
  createdAt: Date
}

type Mutation {
  insertUser(input: UserInput!): User!
}
